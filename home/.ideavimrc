" to enable debugging,
" let debug = 1
" to disable debugging
" let debug = 0

if debug
  " clear previous mapping
  mapclear
  imapclear
  nmapclear
  vmapclear
endif

" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" Source your .vimrc
source ~/.vimrc

" Don't use Ex mode, use Q for formatting.
map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


"" .ideavimrc - inspired by Matt Chapman
"" see https://www.cyberwizard.io/posts/the-ultimate-ideavim-setup/

"" Plugin Settings
"" ========================================================

set surround
set highlightedyank
" set sneak
" set nerdtree

" Easymotion settings
set easymotion
set notimeout

"" Key mappings
"" ========================================================

"" NOTE: 
"" I use the Ex command syntax for actions
"" to avoid executing insert actions
"" https://github.com/JetBrains/ideavim?tab=readme-ov-file#executing-actions
"" ========================================================


" Tab/Buffer navigation
nnoremap L :tabnext<CR>
nnoremap H :tabprev<CR>
nnoremap <leader>bd :bd<CR>
nnoremap <leader>bb :action GoToLastTab<CR>
nnoremap <leader>bp :action PinActiveTabToggle<CR>
nnoremap <leader>bP :action CloseAllUnpinnedEditors<CR>
nnoremap <leader>bP :action CloseAllEditorsButActive<CR>
nnoremap <leader>bl :action CloseAllToTheLeft<CR>
nnoremap <leader>br :action CloseAllToTheRight<CR>
nnoremap <leader>bR :action CloseAllReadonly<CR>

" notifications
nnoremap <leader>snd :action CloseAllNotifications<CR>

" Jump between methods
nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

" Execute macro saved in 'q' register
nnoremap qj @q

" Completion
map <C-n> :action EditorDown<CR>
imap <C-n> :action EditorDown<CR>

map <C-p> :action EditorUp<CR>
imap <C-p> :action EditorUp<CR>

imap <C-y> :action EditorChooseLookupItem<CR>
imap <C-;> :action EditorChooseLookupItemReplace<CR>

"" Leader commands
"" ========================================================

" Comment lines
nnoremap gcc :action CommentByLineComment<CR>
nnoremap gcl :action CommentByLineComment<CR>

" Comment Blocks
vnoremap gc :action CommentByBlockComment<CR>
nmap gcap viagc<Esc>
nmap gcip vipgc<Esc>

" Open NERDTree (use q to exit)
noremap <leader>e :NERDTreeToggle<CR>

" Folding
" noremap <leader>zc :action CollapseAllRegions<CR>
" noremap <leader>zo :action ExpandAllRegions<CR>
" I use the defaults - zM and zR

" Window splits
noremap <leader>wv :action SplitVertically<CR>
noremap <leader>ws :action SplitHorizontally<CR>
noremap <leader>wd :action Unsplit<CR>
noremap <leader>wm :action MoveEditorToOppositeTabGroup<CR>

" Display options
noremap <leader>dd :action ToggleDistractionFreeMode<CR>
noremap <leader>dz :action ToggleZenMode<CR>
noremap <leader>df :action ToggleFullScreen<CR>

" Actions
noremap <leader>/ :action SearchEverywhere<CR>

" File navigation
noremap <leader>ff :action GotoFile<CR>
noremap <leader><leader> :action GotoFile<CR>
noremap <leader>fr :action RecentFiles<CR>
noremap <leader>fc :action FindInPath<CR>
noremap <leader>fl :action RecentLocations<CR>
noremap <leader>fn :action NewScratchFile<CR>

" Close active tab
noremap <leader>q :action CloseContent<CR>

" Refactoring/Coding
noremap <leader>re :action RenameElement<CR>
noremap <leader>rm :action ExtractMethod<CR>
noremap <leader>rv :action IntroduceVariable<CR>
noremap <leader>rf :action IntroduceField<CR>
noremap <leader>rs :action ChangeSignature<CR>
noremap <leader>rr :action Refactorings.QuickListPopupAction<CR>

noremap <leader>cr :action RenameElement<CR>
noremap <leader>ca :action ShowIntentionActions<CR>

map <leader>cf <Action>(ReformatCode)
map <leader>cf <Action>(ReformatCode)
map <leader>cF <Action>(ShowReformatFileDialog)

" Debugging
noremap <leader>db :action ToggleLineBreakpoint<CR>
noremap <leader>ds :action Debug<CR>
noremap <leader>dd :action Debug<CR>
noremap <leader>di :action StepInto<CR>
noremap <leader>do :action StepOver<CR>
noremap <leader>dO :action StepOut<CR>
noremap <leader>dr :action Debugger.RemoveAllBreakpointsInFile<CR>
noremap <leader>dR :action Debugger.RemoveAllBreakpoints<CR>
noremap <leader>de :action End<CR>

" Run
noremap <leader><CR> :action Run<CR>

" Go to code
nnoremap <leader>gd :action GotoDeclaration<CR>
nnoremap <leader>gy :action GotoTypeDeclaration<CR>
nnoremap <leader>gi :action GotoImplementation<CR>
nnoremap <leader>gu :action ShowUsages<CR>
nnoremap <leader>gt :action GotoTest<CR>
nnoremap <leader>gf :action Back<CR>
nnoremap <leader>gb :action Forward<CR>

" Git windows
noremap <leader>gg :action ActivateVersionControlToolWindow<CR>
noremap <leader>gc :action CheckinProject<CR>
noremap <leader>gb :action Git.Branches<CR>

" Errors

noremap ]d :action GotoNextError<CR>
noremap [d :action GotoPreviousError<CR>
noremap ]e :action GotoNextError<CR>
noremap [e :action GotoPreviousError<CR>

" map ]e <Action>(GotoNextError)
" map [e <Action>(GotoPreviousError)

" Restart IDE
noremap <leader>R :action RestartIde<CR>

" Source this file
noremap <leader>fs :source ~/.ideavimrc<CR>

if debug
  echo "Sourced File"
endif
